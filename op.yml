name: github.com/opspec-pkgs/azure.cosmosdb.create
description: creates an azure cosmos db (if doesn't already exist)
inputs:
  subscriptionId:
    string:
      constraints: { minLength: 1 }
      description: id of azure subscription
  loginId:
    string:
      constraints: { minLength: 1 }
      description: id of user, service principal, or app to login with
  loginSecret:
    string:
      constraints: { minLength: 1 }
      description: secret of user, service principal, or app to login with
      isSecret: true
  name:
    string:
      constraints: { minLength: 1 }
      description: name of provisioned db
  resourceGroup:
    string:
      constraints: { minLength: 1 }
      description: name of azure resource group
  locations:
    string:
      constraints: { minLength: 1 }
      description: space separated locations of provisioned db in 'regionName=failoverPriority' format
      default: West US=0
  defaultConsistencyLevel:
    string:
      constraints: { enum: [BoundedStaleness, ConsistentPrefix, Eventual, Session, Strong] }
      description: default consistency level of the provisioned db
      default: Eventual
  kind:
    string:
      constraints: { enum: [GlobalDocumentDB, MongoDB, Parse] }
      description: type of the provisioned db
      default: GlobalDocumentDB
  loginTenantId:
    string:
      constraints: { minLength: 1 }
      description: tenant id of user, service principal, or app to login with
      default: " "
  loginType:
    string:
      constraints: { enum: [user, sp]}
      description: type of login; 'user' (default) or 'sp' for service principal
      default: user
  maxInterval:
    number:
      constraints: { format: integer, minimum: 1, maximum: 100 }
      description: tolerated record staleness (in seconds) for provisioned db
      default: 5
  maxStalenessPrefix:
    number:
      constraints: { format: integer, minimum: 1, maximum: 2147483647 }
      description: tolerated number of stale requests for provisioned db
      default: 100
  ipRangeFilter:
    string:
      constraints: { minLength: 1 }
      description: comma separated list of IPs in CIDR format to allow through firewall of provisioned db
      default: 0.0.0.0/0
version: 2.1.0
run:
  container:
    image: { ref: 'azuresdk/azure-cli-python:2.0.25' }
    cmd: [ /cmd.sh ]
    files: { /cmd.sh }
    envVars:
      subscriptionId:
      loginId:
      loginSecret:
      name:
      resourceGroup:
      locations:
      defaultConsistencyLevel:
      kind:
      loginTenantId:
      loginType:
      maxInterval:
      maxStalenessPrefix:
      ipRangeFilter:
